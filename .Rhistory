packages.install("RColorBrewer")
install.packages("RColorBrewer")
install.packages(swirl)
install.packages("swirl")
install.packages("rcurl")
install.packages("RCurl")
install.packages("swirl")
install.packages("httr")
install.packages("devtools")
install.packages("devtools")
install.packages("swirl")
library(swirl)
?InstallCourses
install_course(Exploratory Data Analysis)
install_course("Exploratory Data Analysis")
swirl()
dist(dataFeame)
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
as.dendrogram(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
abline(h=.05, col="red")
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
play()
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 10, lwd = 2)
nxt()
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y,  col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame,6)$cluster, pch = 19, cex = 2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix
)
library("swirl")
swirl()
quit()
swirl()
library("swirl")
swirl()
info()
main()
swirl()
1
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2[,1]
svd2$v[,1]
svd2$v[,1:2]
svd2$d
faceData
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1v[,1])
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
skip()
info()
main()
main()
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd1, subject = )
sub1 <- subset(ssd1, subject = 1)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
medit("showXY.R")
myedit("showXY.R")
showMe(1:6)
mdist<-dist(x[,1:3])
mdist<-dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist<-dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclus(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)]), centers = 3
kClust <- kmeans(sub1[,-c(562,563)]), centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClus$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[laying, 1:12], pch = 19, ylab = "Laying Cluster")
names(sub1)
names(sub1[, 1:3])
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown, 1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
back()
info()
main()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(p0) <- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, rm.na = TRUE)
mean(negative, na.rm =  = TRUE)
mean(negative, na.rm =  TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(date)
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code %in% both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub), lwd = 2, na.rm = TRUE)
abline(h = median(x0sub), lwd = 2, na.rm = TRUE)
abline(h = median(x0sub, na.rm=TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm=TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
mn0
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(names(mn0),mean = mn0)
d0 <- data.frame(state = names(mn0),mean = mn0)
d1 <- data.frame(state = names(mn1),mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mr)
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2]))
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5))
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5)))
with(mrg, plot(rep(1,52), mrg[,2]), xlim = c(.5, 2.5))
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5))
)
with(mrg, points(rep(2,52), mrg[,3], xlim = c(.5, 2.5))
)
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y, ]
quit
quit(0)
quit()
install.packages(kernlab)
install.packages("kernlab")
library(kernlab)
load(dataset)
View(a1)
ls
ls()
dir()
setwd("~/Desktop/R/5 Reproducible Research/RepData_PeerAssessment1/RepData_PeerAssessment1")
knit2html("PA1_template.Rmd")
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
render("PA1_template.Rmd")
rmarkdown::render("PA1_template.Rmd")
